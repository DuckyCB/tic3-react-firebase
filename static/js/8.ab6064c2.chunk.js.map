{"version":3,"sources":["components/sidebar/UserInfo.js","pages/UserProfile.js","utils/date-utils.js","components/VoteButtons.js","components/Post.js","components/Timeline.js","components/skeleton/SkeletonPosts.js","../node_modules/@mui/material/Grid/GridContext.js","../node_modules/@mui/material/Grid/gridClasses.js","../node_modules/@mui/material/Grid/Grid.js"],"names":["UserInfo","user","loading","Card","sx","width","CardHeader","title","Typography","variant","gutterBottom","firstName","lastName","avatar","Skeleton","animation","height","style","marginBottom","Avatar","bgcolor","red","src","subheader","username","CardContent","postsCount","UserProfile","useState","undefined","setUser","posts","setPosts","useParams","useAuthState","auth","useEffect","a","postsQuery","query","collection","db","where","orderBy","onSnapshot","querySnapshot","postsArr","forEach","doc","push","id","data","e","console","error","message","userQuery","getDocs","userResult","userArr","docs","map","length","fetchUserData","fetchPosts","document","Grid","container","spacing","justifyContent","alignItems","item","xs","Timeline","SkeletonPosts","Stack","mb","mt","formatDay","dateFS","dateJS","toDate","month","getUTCMonth","getUTCDate","getUTCFullYear","formatMinutes","day","year","getUTCHours","getUTCMinutes","require","VoteButtons","post","userData","setUserData","upVotesCount","downVotesCount","upvoteList","usersUpvote","downvoteList","usersDownvote","fetchData","handleClick","type","date","Date","includes","filter","batch","writeBatch","postRef","update","updatedAt","Timestamp","fromDate","commit","direction","IconButton","color","disabled","onClick","p","Content","fullRender","imgURL","CardMedia","component","alt","image","display","padding","maxHeight","overflow","align","content","Post","createdAt","subKinchoo","Link","RouterLink","to","subname","textDecoration","CardActionArea","CardActions","defaultProps","GridContext","React","getGridUtilityClass","slot","generateUtilityClass","GRID_SIZES","gridClasses","generateUtilityClasses","wrap","size","_excluded","getOffset","val","parse","parseFloat","String","replace","GridRoot","styled","name","overridesResolver","props","styles","ownerState","lg","md","sm","xl","zeroMinWidth","root","_extends","boxSizing","flexWrap","margin","minWidth","theme","directionValues","resolveBreakpointValues","values","breakpoints","handleBreakpoints","propValue","output","flexDirection","indexOf","maxWidth","rowSpacing","rowSpacingValues","themeSpacing","marginTop","paddingTop","columnSpacing","columnSpacingValues","marginLeft","paddingLeft","keys","reduce","globalStyles","breakpoint","flexBasis","flexGrow","flexShrink","columnsBreakpointValues","columns","columnValue","Math","round","more","fullWidth","Object","assign","up","generateGrid","inProps","ref","element","themeProps","useThemeProps","extendSxProp","className","columnsProp","columnSpacingProp","rowSpacingProp","other","_objectWithoutPropertiesLoose","columnsContext","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","as","Provider","value","children"],"mappings":"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","file":"static/js/8.ab6064c2.chunk.js","sourcesContent":["import {Card, CardContent, CardHeader, Skeleton} from \"@mui/material\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport {red} from \"@mui/material/colors\";\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\n\r\n\r\nexport default function UserInfo({ user }) {\r\n\tconst { loading = false } = user;\r\n\treturn (\r\n\t\t<Card sx={{width: 8/10}}>\r\n\t\t\t<CardHeader\r\n\t\t\t\ttitle={\r\n\t\t\t\t\t<Typography variant=\"h5\"  gutterBottom>\r\n\t\t\t\t\t\t\t{user.firstName} {user.lastName}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t}\r\n\t\t\t\tavatar={\r\n\t\t\t\t\tloading ? (\r\n\t\t\t\t\t<Skeleton animation=\"wave\" height={10} width=\"80%\" style={{ marginBottom: 6 }}/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Avatar sx={{bgcolor: red[500], height: 70, width: 70}} src={user.avatar}/>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\tsubheader={user.username}\r\n\t\t\t/>\r\n\t\t\t<CardContent>\r\n\t\t\t\t<Typography variant='caption'>\r\n\t\t\t\t\tNumber of posts: {user.postsCount}\r\n\t\t\t\t</Typography>\r\n\t\t\t</CardContent>\r\n\t\t</Card>\r\n\t)\r\n\r\n}\r\n","import Navbar from \"../components/Navbar\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport {db} from \"../lib/firebase\";\r\nimport {collection, getDocs, where, query, orderBy, onSnapshot} from \"firebase/firestore\";\r\nimport {Grid, Skeleton, Stack} from \"@mui/material\";\r\nimport Timeline from \"../components/Timeline\";\r\nimport UserInfo from \"../components/sidebar/UserInfo\";\r\nimport SkeletonPosts from \"../components/skeleton/SkeletonPosts\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { auth } from \"../lib/firebase\";\r\nimport { fetchUserData } from \"../utils/userUtils\";\r\nimport * as ROUTES from '../constants/routes'\r\n\r\n\r\nexport default function UserProfile() {\r\n\tconst [user, setUser] = useState(undefined);\r\n\tconst [posts, setPosts] = useState([]);\r\n\tconst { username } = useParams();\r\n\tconst [userState, loading, error] = useAuthState(auth);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function fetchPosts() {\r\n\t\t\ttry {\r\n\t\t\t\tconst postsQuery = query(collection(db, \"posts\"), where(\"user.username\", \"==\", username),\r\n\t\t\t\t\torderBy(\"createdAt\", \"desc\"));\r\n\t\t\t\tonSnapshot(postsQuery, (querySnapshot) => {\r\n\t\t\t\t\tconst postsArr = [];\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\tpostsArr.push({\r\n\t\t\t\t\t\t\tid: doc.id,\r\n\t\t\t\t\t\t\t...doc.data(),\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t\tsetPosts(postsArr)\r\n\t\t\t\t});\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error(e.message);\r\n\t\t\t}\r\n\t\t}\r\n\t\tasync function fetchUserData() {\r\n\t\t\ttry {\r\n\t\t\t\tconst userQuery = query(collection(db, 'users'), where('username', '==', username));\r\n\t\t\t\tconst userResult = await getDocs(userQuery);\r\n\t\t\t\tconst userArr = userResult.docs.map(user => user.data());\r\n\t\t\t\tif (userResult.docs.length === 0) {\r\n\t\t\t\t\tconsole.error('user not found');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tsetUser(userArr[0]);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.error(e.message);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfetchUserData();\r\n\t\tfetchPosts();\r\n\t}, []);\r\n\r\n\t// useEffect(() => {\r\n\t// \tif (loading || !userState) return;\r\n\t//\r\n\t// \tconst fetchData = async () => {\r\n\t// \t\tconsole.log('fetching user data...');\r\n    //         setUser(await fetchUserData(userState));\r\n    //     };\r\n\t//\r\n\t// \tconst fetchPosts = async () => {\r\n\t//\r\n\t// \t\ttry {\r\n\t// \t\t\tconst postsQuery = query(collection(db, \"posts\"), where(\"user.username\", \"==\", user.username),\r\n\t// \t\t\t\torderBy(\"createdAt\", \"desc\"));\r\n\t// \t\t\tonSnapshot(postsQuery, (querySnapshot) => {\r\n\t// \t\t\t\tconst postsArr = [];\r\n\t// \t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t// \t\t\t\t\tpostsArr.push({\r\n\t// \t\t\t\t\t\tid: doc.id,\r\n\t// \t\t\t\t\t\t...doc.data(),\r\n\t// \t\t\t\t\t});\r\n\t// \t\t\t\t})\r\n\t// \t\t\t\tsetPosts(postsArr)\r\n\t// \t\t\t});\r\n\t// \t\t} catch (e) {\r\n\t// \t\t\tconsole.error(e.message);\r\n\t// \t\t}\r\n\t// \t};\r\n\t//\r\n\t// \tconst loadData = async () => {\r\n\t// \t\tawait fetchData();\r\n\t// \t\tawait fetchPosts();\r\n\t// \t};\r\n\t//\r\n\t// \tloadData();\r\n\t//\r\n\t// }, [loading, userState])\r\n\r\n\tdocument.title = user ? `u/${user.username}` : 'u/';\r\n\r\n\treturn (\r\n\r\n\t\t<>\r\n\t\t\t<Grid container spacing={2} justifyContent=\"center\" alignItems=\"flex-start\">\r\n\t\t\t\t<Grid item xs={8}>\r\n\t\t\t\t\t{posts ? (\r\n\t\t\t\t\t\t<Timeline posts={posts}/>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<SkeletonPosts/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Grid item xs={4}>\r\n\t\t\t\t\t<Stack spacing={4} justifyContent=\"center\" mb={5} mt={2} alignItems=\"left\">\r\n\t\t\t\t\t\t{user ? (\r\n\t\t\t\t\t\t\t<UserInfo user={user}/>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<Skeleton animation='wave' variant='rectangular' sx={{width: 8/10, height: 150}}/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Stack>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Grid>\r\n\t\t</>\r\n\r\n\t);\r\n}\r\n","\r\nexport function formatDay(dateFS){\r\n\tconst dateJS = dateFS.toDate();\r\n\tconst month = dateJS.getUTCMonth() + 1; //months from 1-12\r\n\tconst day = dateJS.getUTCDate();\r\n\tconst year = dateJS.getUTCFullYear();\r\n\treturn day + \"/\" + month + \"/\" + year;\r\n}\r\n\r\nexport function formatMinutes(dateFS){\r\n\tconst dateJS = dateFS.toDate();\r\n\tconst month = dateJS.getUTCMonth() + 1; //months from 1-12\r\n\tconst day = dateJS.getUTCDate();\r\n\tconst year = dateJS.getUTCFullYear();\r\n\tconst hour = dateJS.getUTCHours();\r\n\tconst minutes = dateJS.getUTCMinutes() > 9 ? dateJS.getUTCMinutes() : \"0\" + dateJS.getUTCMinutes();\r\n\treturn ((24 + hour - 3) % 24) + ':' + minutes + ' ' + day + \"/\" + month + \"/\" + year;\r\n}\r\n","import ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\r\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport {Stack, Typography} from \"@mui/material\";\r\nimport {doc, Timestamp, writeBatch} from \"firebase/firestore\";\r\nimport {fetchUserData} from \"../utils/userUtils\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\nimport {auth} from \"../lib/firebase\";\r\nconst {db} = require(\"../lib/firebase\");\r\n\r\n\r\n\r\nexport default function VoteButtons ({ post }){\r\n    const [userData, setUserData] = useState(null);\r\n    const [user, loading, error] = useAuthState(auth);\r\n\r\n    let upVotesCount = post.upVotesCount;\r\n    let downVotesCount = post.downVotesCount;\r\n    let upvoteList = post.usersUpvote\r\n    let downvoteList = post.usersDownvote\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            if (loading || !user) return;\r\n            setUserData(await fetchUserData(user));\r\n        }\r\n        fetchData();\r\n    }, [user, loading]);\r\n\r\n\r\n\r\n    const handleClick = async (type) => {\r\n        // Do calculation to save the vote.\r\n        upVotesCount = post.upVotesCount;\r\n        downVotesCount = post.downVotesCount;\r\n        upvoteList = post.usersUpvote\r\n        downvoteList = post.usersDownvote\r\n        const date = new Date();\r\n\r\n        if (type === \"upvote\") {\r\n            if (downvoteList.includes(userData.id)){\r\n                // remove downvote\r\n                downvoteList = downvoteList.filter(id => id !== userData.id)\r\n                downVotesCount--\r\n            } else {\r\n                upVotesCount++;\r\n                upvoteList.push(userData.id);\r\n            }\r\n        } else {\r\n            if (upvoteList.includes(userData.id)){\r\n                // remove upvote\r\n                upvoteList = upvoteList.filter(id => id !== userData.id)\r\n                upVotesCount--\r\n            } else {\r\n                downVotesCount++;\r\n                downvoteList.push(userData.id);\r\n            }\r\n        }\r\n        const batch = writeBatch(db);\r\n        const postRef = doc(db, \"posts\", post.id);\r\n        batch.update(postRef, {\r\n            upVotesCount: upVotesCount,\r\n            downVotesCount: downVotesCount,\r\n            usersUpvote: upvoteList,\r\n            usersDownvote: downvoteList,\r\n            updatedAt: Timestamp.fromDate(date)\r\n        });\r\n        await batch.commit()\r\n    };\r\n\r\nreturn (\r\n    <>\r\n        <Stack direction=\"row\">\r\n            <IconButton\r\n                color={userData ? (post.usersDownvote.includes(userData.id) ? \"disabled\" : \"upvote\"): \"disabled\"}\r\n                disabled={!userData || post.usersUpvote.includes(userData.id)}\r\n                style={userData ? (post.usersUpvote.includes(userData.id) ? {color: '#FF8b60'}: {}) : {}}\r\n                variant=\"outlined\"\r\n                onClick={() => handleClick(\"upvote\")}\r\n            >\r\n                <ArrowUpwardIcon/>\r\n            </IconButton>\r\n            <IconButton\r\n                color={userData ? (post.usersUpvote.includes(userData.id) ? \"disabled\" : \"downvote\"): \"disabled\"}\r\n                disabled={!userData || post.usersDownvote.includes(userData.id)}\r\n                style={userData ? (post.usersDownvote.includes(userData.id) ? {color: '#9494FF'}: {}) : {}}\r\n                variant=\"outlined\"\r\n                onClick={() => handleClick(\"downvote\")}\r\n            >\r\n                <ArrowDownwardIcon/>\r\n            </IconButton>\r\n            <Typography p={1}>\r\n                {post.upVotesCount - post.downVotesCount}\r\n            </Typography>\r\n        </Stack>\r\n    </>\r\n)}\r\n\r\n","import React from \"react\";\r\nimport {Card, CardActionArea, CardActions, CardContent, CardHeader, CardMedia, Link, Typography} from \"@mui/material\";\r\nimport VoteButtons from \"./VoteButtons\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport {red} from \"@mui/material/colors\";\r\nimport {Link as RouterLink} from \"react-router-dom\";\r\nimport {formatDay} from \"../utils/date-utils\";\r\n\r\nfunction Content({post, fullRender}) {\r\n\r\n    let img;\r\n    if (post.imgURL) {\r\n        img = <CardMedia component=\"img\" alt=\"Image not fetched\" image={post.imgURL}/>\r\n    }\r\n\r\n    return (\r\n        <CardContent>\r\n            <Typography variant=\"h6\" display=\"block\" gutterBottom>\r\n                {post.title}\r\n            </Typography>\r\n            {post.imgURL ? <CardMedia component=\"img\" alt=\"Image not fetched\" image={post.imgURL}/> : null}\r\n            <Typography sx={fullRender ? {padding: 4} : {padding: 4, maxHeight: 250, overflow: 'hidden', display: (post.imgURL === '' ?\r\n                    'block' : 'none')}} align={\"justify\"} >\r\n                {post.content}\r\n            </Typography>\r\n        </CardContent>\r\n    )\r\n}\r\n\r\nconst Post = ({post, fullRender}) => {\r\n    let user;\r\n    if (post.user) {\r\n        user = `Posted by u/${post.user.username}`\r\n    }\r\n    const date = formatDay(post.createdAt)\r\n\r\n\r\n    const styleUser = {\r\n\r\n    }\r\n   return (\r\n       <Card key={post.id} sx={{ width: 6/10 }}>\r\n           <CardHeader\r\n               avatar={\r\n                   <Avatar sx={{bgcolor: red[500]}} aria-label=\"recipe\" src={post.subKinchoo.avatar}/>\r\n               }\r\n               title={\r\n                   <Link component={RouterLink} to={`/r/${post.subKinchoo.subname}`} sx={{ textDecoration: 'none', color: 'text.primary' }}>\r\n                       r/{post.subKinchoo.subname}\r\n                   </Link>\r\n               }\r\n               subheader={\r\n                   <Link component={RouterLink} to={`/u/${post.user.username}`} sx={{ textDecoration: 'none', color: 'text.secondary' }}>\r\n                       {user}\r\n                   </Link>\r\n               }\r\n           />\r\n           {fullRender ? (\r\n               <Content post={post} fullRender={fullRender}/>\r\n           ) : (\r\n               <CardActionArea component={RouterLink} to={`/p/${post.id}`}>\r\n                   <Content post={post} fullRender={fullRender}/>\r\n               </CardActionArea>\r\n           )}\r\n           <CardActions sx={{justifyContent: 'space-between'}}>\r\n               <VoteButtons post = {post}/>\r\n               <Typography align={\"right\"} >\r\n                   Posted: {date}\r\n               </Typography>\r\n           </CardActions>\r\n       </Card>\r\n   );\r\n};\r\n\r\nPost.defaultProps = {\r\n    fullRender: false\r\n};\r\n\r\nexport default Post;\r\n","import Post from \"./Post\";\r\nimport {Stack} from \"@mui/material\";\r\n\r\nexport default function Timeline({posts}) {\r\n\r\n\treturn (\r\n\t\t<Stack spacing={4} justifyContent=\"center\" mb={5} mt={2} alignItems=\"center\">\r\n\t\t\t{posts.map((post) => (\r\n\t\t\t\t<Post post={post} key={post.id} />\r\n\t\t\t))}\r\n\t\t</Stack>\r\n\t)\r\n}\r\n","import {Skeleton, Stack} from \"@mui/material\";\r\n\r\n\r\nexport default function SkeletonPosts() {\r\n\r\n\treturn (\r\n\t\t<Stack spacing={4} justifyContent=\"center\" mb={5} mt={2} alignItems=\"center\">\r\n\t\t\t<Skeleton animation='wave' variant='rectangular' sx={{ width: 6/10, height: 500 }}/>\r\n\t\t\t<Skeleton animation='wave' variant='rectangular' sx={{ width: 6/10, height: 500 }}/>\r\n\t\t\t<Skeleton animation='wave' variant='rectangular' sx={{ width: 6/10, height: 500 }}/>\r\n\t\t</Stack>\r\n\t)\r\n}","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst GridContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  GridContext.displayName = 'GridContext';\n}\n\nexport default GridContext;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getGridUtilityClass(slot) {\n  return generateUtilityClass('MuiGrid', slot);\n}\nconst SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst DIRECTIONS = ['column-reverse', 'column', 'row-reverse', 'row'];\nconst WRAPS = ['nowrap', 'wrap-reverse', 'wrap'];\nconst GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nconst gridClasses = generateUtilityClasses('MuiGrid', ['root', 'container', 'item', 'zeroMinWidth', // spacings\n...SPACINGS.map(spacing => `spacing-xs-${spacing}`), // direction values\n...DIRECTIONS.map(direction => `direction-xs-${direction}`), // wrap values\n...WRAPS.map(wrap => `wrap-xs-${wrap}`), // grid sizes for all breakpoints\n...GRID_SIZES.map(size => `grid-xs-${size}`), ...GRID_SIZES.map(size => `grid-sm-${size}`), ...GRID_SIZES.map(size => `grid-md-${size}`), ...GRID_SIZES.map(size => `grid-lg-${size}`), ...GRID_SIZES.map(size => `grid-xl-${size}`)]);\nexport default gridClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"columns\", \"columnSpacing\", \"component\", \"container\", \"direction\", \"item\", \"lg\", \"md\", \"rowSpacing\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"];\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport GridContext from './GridContext';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getOffset(val) {\n  const parse = parseFloat(val);\n  return `${parse}${String(val).replace(String(parse), '') || 'px'}`;\n}\n\nfunction generateGrid(globalStyles, theme, breakpoint, ownerState) {\n  const size = ownerState[breakpoint];\n\n  if (!size) {\n    return;\n  }\n\n  let styles = {};\n\n  if (size === true) {\n    // For the auto layouting\n    styles = {\n      flexBasis: 0,\n      flexGrow: 1,\n      maxWidth: '100%'\n    };\n  } else if (size === 'auto') {\n    styles = {\n      flexBasis: 'auto',\n      flexGrow: 0,\n      flexShrink: 0,\n      maxWidth: 'none',\n      width: 'auto'\n    };\n  } else {\n    const columnsBreakpointValues = resolveBreakpointValues({\n      values: ownerState.columns,\n      breakpoints: theme.breakpoints.values\n    });\n    const columnValue = typeof columnsBreakpointValues === 'object' ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues; // Keep 7 significant numbers.\n\n    const width = `${Math.round(size / columnValue * 10e7) / 10e5}%`;\n    let more = {};\n\n    if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n      const themeSpacing = theme.spacing(ownerState.columnSpacing);\n\n      if (themeSpacing !== '0px') {\n        const fullWidth = `calc(${width} + ${getOffset(themeSpacing)})`;\n        more = {\n          flexBasis: fullWidth,\n          maxWidth: fullWidth\n        };\n      }\n    } // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n\n    styles = _extends({\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    }, more);\n  } // No need for a media query for the first size.\n\n\n  if (theme.breakpoints.values[breakpoint] === 0) {\n    Object.assign(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nexport function generateDirection({\n  theme,\n  ownerState\n}) {\n  const directionValues = resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  });\n  return handleBreakpoints({\n    theme\n  }, directionValues, propValue => {\n    const output = {\n      flexDirection: propValue\n    };\n\n    if (propValue.indexOf('column') === 0) {\n      output[`& > .${gridClasses.item}`] = {\n        maxWidth: 'none'\n      };\n    }\n\n    return output;\n  });\n}\nexport function generateRowGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    rowSpacing\n  } = ownerState;\n  let styles = {};\n\n  if (container && rowSpacing !== 0) {\n    const rowSpacingValues = resolveBreakpointValues({\n      values: rowSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    styles = handleBreakpoints({\n      theme\n    }, rowSpacingValues, propValue => {\n      const themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return {\n          marginTop: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingTop: getOffset(themeSpacing)\n          }\n        };\n      }\n\n      return {};\n    });\n  }\n\n  return styles;\n}\nexport function generateColumnGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    columnSpacing\n  } = ownerState;\n  let styles = {};\n\n  if (container && columnSpacing !== 0) {\n    const columnSpacingValues = resolveBreakpointValues({\n      values: columnSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    styles = handleBreakpoints({\n      theme\n    }, columnSpacingValues, propValue => {\n      const themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return {\n          width: `calc(100% + ${getOffset(themeSpacing)})`,\n          marginLeft: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingLeft: getOffset(themeSpacing)\n          }\n        };\n      }\n\n      return {};\n    });\n  }\n\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\nconst GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      container,\n      direction,\n      item,\n      lg,\n      md,\n      sm,\n      spacing,\n      wrap,\n      xl,\n      xs,\n      zeroMinWidth\n    } = props.ownerState;\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, container && spacing !== 0 && styles[`spacing-xs-${String(spacing)}`], direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], xs !== false && styles[`grid-xs-${String(xs)}`], sm !== false && styles[`grid-sm-${String(sm)}`], md !== false && styles[`grid-md-${String(md)}`], lg !== false && styles[`grid-lg-${String(lg)}`], xl !== false && styles[`grid-xl-${String(xl)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box'\n}, ownerState.container && {\n  display: 'flex',\n  flexWrap: 'wrap',\n  width: '100%'\n}, ownerState.item && {\n  margin: 0 // For instance, it's useful when used with a `figure` element.\n\n}, ownerState.zeroMinWidth && {\n  minWidth: 0\n}, ownerState.wrap === 'nowrap' && {\n  flexWrap: 'nowrap'\n}, ownerState.wrap === 'reverse' && {\n  flexWrap: 'wrap-reverse'\n}), generateDirection, generateRowGap, generateColumnGap, ({\n  theme,\n  ownerState\n}) => theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n  // Use side effect over immutability for better performance.\n  generateGrid(globalStyles, theme, breakpoint, ownerState);\n  return globalStyles;\n}, {}));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    spacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', container && spacing !== 0 && `spacing-xs-${String(spacing)}`, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, xs !== false && `grid-xs-${String(xs)}`, sm !== false && `grid-sm-${String(sm)}`, md !== false && `grid-md-${String(md)}`, lg !== false && `grid-lg-${String(lg)}`, xl !== false && `grid-xl-${String(xl)}`]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\n\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const props = extendSxProp(themeProps);\n\n  const {\n    className,\n    columns: columnsProp,\n    columnSpacing: columnSpacingProp,\n    component = 'div',\n    container = false,\n    direction = 'row',\n    item = false,\n    lg = false,\n    md = false,\n    rowSpacing: rowSpacingProp,\n    sm = false,\n    spacing = 0,\n    wrap = 'wrap',\n    xl = false,\n    xs = false,\n    zeroMinWidth = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rowSpacing = rowSpacingProp || spacing;\n  const columnSpacing = columnSpacingProp || spacing;\n  const columnsContext = React.useContext(GridContext); // setting prop before context to accomodate nesting\n  // colums set with default breakpoint unit of 12\n\n  const columns = columnsProp || columnsContext || 12;\n\n  const ownerState = _extends({}, props, {\n    columns,\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    rowSpacing,\n    columnSpacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const wrapChild = element => columns !== 12 ? /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: element\n  }) : element;\n\n  return wrapChild( /*#__PURE__*/_jsx(GridRoot, _extends({\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid); // eslint-disable-next-line no-useless-concat\n\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default Grid;"],"sourceRoot":""}